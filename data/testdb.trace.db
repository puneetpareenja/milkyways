2019-11-20 13:09:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ORDERID BIGINT NOT NULL, CUSTOMERID BIGINT NOT NULL, TOTAL DOUBLE NOT NULL, PRIMARY KEY (ORDERID)) "; expected "identifier"; SQL statement:
create table order (orderid bigint not null, customerid bigint not null, total double not null, primary key (orderid)) [42001-199]
2019-11-20 13:17:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ORDERID BIGINT NOT NULL, CUSTOMERID BIGINT NOT NULL, TOTAL DOUBLE NOT NULL, PRIMARY KEY (ORDERID)) "; expected "identifier"; SQL statement:
create table order (orderid bigint not null, customerid bigint not null, total double not null, primary key (orderid)) [42001-199]
2019-11-20 13:49:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ORDERID BIGINT NOT NULL, CUSTOMERID BIGINT NOT NULL, TOTAL DOUBLE NOT NULL, PRIMARY KEY (ORDERID)) "; expected "identifier"; SQL statement:
create table order (orderid bigint not null, customerid bigint not null, total double not null, primary key (orderid)) [42001-199]
2019-11-20 15:11:37 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (ORDERID BIGINT NOT NULL, CUSTOMERID BIGINT NOT NULL, TOTAL DOUBLE NOT NULL, PRIMARY KEY (ORDERID)) "; expected "identifier"; SQL statement:
create table order (orderid bigint not null, customerid bigint not null, total double not null, primary key (orderid)) [42001-199]
2019-11-20 22:29:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CUSTOMER_ADDRESSLIST[*] SELECT * FROM CUSTOMER"; expected "COMMIT, CREATE, CALL, CHECKPOINT, COMMENT"; SQL statement:
CUSTOMER_ADDRESSLIST SELECT * FROM CUSTOMER [42001-199]
2019-11-20 22:29:52 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CUSTOMER_ADDRESSLIST[*] SELECT * FROM CUSTOMER"; expected "COMMIT, CREATE, CALL, CHECKPOINT, COMMENT"; SQL statement:
CUSTOMER_ADDRESSLIST SELECT * FROM CUSTOMER [42001-199]
2019-11-20 22:29:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CUSTOMER_ADDRESSLIST[*] CUSTOMER_CARDLIST SELECT * FROM CUSTOMER"; expected "COMMIT, CREATE, CALL, CHECKPOINT, COMMENT"; SQL statement:
CUSTOMER_ADDRESSLIST CUSTOMER_CARDLIST SELECT * FROM CUSTOMER [42001-199]
2019-11-20 22:29:57 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CUSTOMER_ADDRESSLIST[*] CUSTOMER_CARDLIST SELECT * FROM CUSTOMER"; expected "COMMIT, CREATE, CALL, CHECKPOINT, COMMENT"; SQL statement:
CUSTOMER_ADDRESSLIST CUSTOMER_CARDLIST SELECT * FROM CUSTOMER [42001-199]
2019-11-20 22:31:46 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ADDRESS[*] SELECT * FROM CARD"; expected "ALTER, ANALYZE"; SQL statement:
ADDRESS SELECT * FROM CARD [42001-199]
2019-11-21 21:41:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO ITEM (NAME, IMAGEURL, QUANTITY, TYPE, SUGARFREE, GLUTENFREE, DAIRYFREE, VEGETARIAN, PRICE, RATING) [*]"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, FROM, TABLE, VALUES"; SQL statement:
insert into item (name, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating) [42001-199]
2019-11-21 21:43:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO ITEM (NAME, IMAGEURL, QUANTITY, TYPE, SUGARFREE, GLUTENFREE, DAIRYFREE, VEGETARIAN, PRICE, RATING) [*]"; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, FROM, TABLE, VALUES"; SQL statement:
insert into item (name, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating) [42001-199]
2019-11-23 02:21:58 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT [*]"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS"; SQL statement:
show all tables [42001-199]
2019-11-23 02:23:16 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "DROP CUSTOMER_ADDRESSLIST[*] "; expected "TABLE, INDEX, USER, SEQUENCE, CONSTANT, TRIGGER, VIEW, ROLE, ALIAS, SCHEMA, ALL, DOMAIN, TYPE, DATATYPE, AGGREGATE, SYNONYM"; SQL statement:
drop customer_addresslist [42001-199]
2019-11-23 03:12:47 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT * FROM CARD CONTACT CUSTOMER[*] CUSTOMER_ADDRESS ITEM SALES"; SQL statement:
SELECT * FROM CARD CONTACT CUSTOMER CUSTOMER_ADDRESS ITEM SALES [42000-199]
2019-11-23 03:15:09 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO ITEM ( DAIRYFREE , GLUTENFREE , IMAGEURL , NAME , PRICE , QUANTITY , RATING , STORE_STOREID , SUGARFREE , TYPE , VEGETARIAN ) VALUES [*]"; expected "ROW, (, DEFAULT, NOT, EXISTS, INTERSECTS"; SQL statement:
insert into item ( dairyfree , glutenfree , imageurl , name , price , quantity , rating , store_storeid , sugarfree , type , vegetarian ) values [42001-199]
2019-11-23 03:16:52 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "Mama's Little Bakery" not found; SQL statement:
insert into store ( storename , phone ) values ( "Mama's Little Bakery", 9876543210) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:176)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:158)
	at org.h2.command.dml.Insert.prepare(Insert.java:322)
	at org.h2.command.Parser.prepareCommand(Parser.java:689)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:217)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:1113)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1436)
	at org.h2.server.web.WebApp.query(WebApp.java:1111)
	at org.h2.server.web.WebApp.query(WebApp.java:1087)
	at org.h2.server.web.WebApp.process(WebApp.java:237)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:121)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:158)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
2019-11-23 03:17:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into store ( storename , phone ) values Mama[*]'s Little Bakery, 9876543210"; SQL statement:
insert into store ( storename , phone ) values Mama's Little Bakery, 9876543210 [42000-199]
2019-11-23 03:17:42 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO STORE ( STORENAME , PHONE ) VALUES MAMAS LITTLE[*] BAKERY, 9876543210 "; SQL statement:
insert into store ( storename , phone ) values Mamas Little Bakery, 9876543210 [42000-199]
2019-11-23 03:17:59 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO STORE ( STORENAME , PHONE ) VALUES [[*]MAMAS LITTLE BAKERY, 9876543210] "; expected "ROW, (, DEFAULT, NOT, EXISTS, INTERSECTS"; SQL statement:
insert into store ( storename , phone ) values [Mamas Little Bakery, 9876543210] [42001-199]
2019-11-23 03:18:57 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into store ( storename , phone ) value ([*]'Mamas Little Bakery, 9876543210);"; SQL statement:
insert into store ( storename , phone ) value ('Mamas Little Bakery, 9876543210); [42000-199]
2019-11-23 03:20:05 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into store ( storename , phone ) values ([*]'Mamas Little Bakery, 9876543210);"; SQL statement:
insert into store ( storename , phone ) values ('Mamas Little Bakery, 9876543210); [42000-199]
2019-11-23 03:21:18 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into store values (1, [*]'Mamas Little Bakery, 9876543210)"; SQL statement:
insert into store values (1, 'Mamas Little Bakery, 9876543210) [42000-199]
2019-11-23 03:21:33 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into store values ( 'Mamas Little Bakery, '9876543210[*]')"; SQL statement:
insert into store values ( 'Mamas Little Bakery, '9876543210') [42000-199]
2019-11-23 03:21:52 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into store ( storename , phone ) values ('Mamas Little Bakery, '9876543210[*]')"; SQL statement:
insert into store ( storename , phone ) values ('Mamas Little Bakery, '9876543210') [42000-199]
2019-11-24 01:48:26 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "9753108642" not found; SQL statement:
insert into store ( storeid, phone ,storename ) values (1, "9753108642", "Small Victory") [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:176)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:158)
	at org.h2.command.dml.Insert.prepare(Insert.java:322)
	at org.h2.command.Parser.prepareCommand(Parser.java:689)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:217)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:1113)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1436)
	at org.h2.server.web.WebApp.query(WebApp.java:1111)
	at org.h2.server.web.WebApp.query(WebApp.java:1087)
	at org.h2.server.web.WebApp.process(WebApp.java:237)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:121)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:158)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
2019-11-24 01:48:44 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column count does not match; SQL statement:
insert into store ( storeid, phone ,storename ) values 1, "9753108642", "Small Victory" [21002-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.dml.Insert.prepare(Insert.java:314)
	at org.h2.command.Parser.prepareCommand(Parser.java:689)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:217)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:1113)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1436)
	at org.h2.server.web.WebApp.query(WebApp.java:1111)
	at org.h2.server.web.WebApp.query(WebApp.java:1087)
	at org.h2.server.web.WebApp.process(WebApp.java:237)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:169)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:121)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:158)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:830)
2019-11-24 01:50:52 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO STORE ( STOREID, PHONE ,STORENAME ) VALUE[*] (1, '9753108642', 'Small Victory') "; expected "DIRECT, SORTED, DEFAULT, VALUES, SET, (, WITH, SELECT, FROM, TABLE, VALUES"; SQL statement:
insert into store ( storeid, phone ,storename ) value (1, '9753108642', 'Small Victory') [42001-199]
2019-11-24 05:18:24 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/home/puneet/Code/IdeaProjects/milkyways/data/testdb.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:73)
	at org.springframework.beans.factory.ObjectProvider.ifAvailable(ObjectProvider.java:93)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:640)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:625)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:202)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:96)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:85)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:253)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:227)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5135)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:841)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:421)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:459)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:88)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:180)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:153)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:544)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.runtimeterror.milkyways.MilkywaysApplication.main(MilkywaysApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/home/puneet/Code/IdeaProjects/milkyways/data/testdb.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 91 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/puneet/Code/IdeaProjects/milkyways/data/testdb.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 85 more
2019-11-24 05:18:25 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: The file is locked: nio:/home/puneet/Code/IdeaProjects/milkyways/data/testdb.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:404)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3343)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:162)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:95)
	at org.h2.engine.Database.getPageStore(Database.java:2739)
	at org.h2.engine.Database.open(Database.java:769)
	at org.h2.engine.Database.openDatabase(Database.java:319)
	at org.h2.engine.Database.<init>(Database.java:313)
	at org.h2.engine.Engine.openSession(Engine.java:69)
	at org.h2.engine.Engine.openSession(Engine.java:201)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:178)
	at org.h2.engine.Engine.createSession(Engine.java:161)
	at org.h2.engine.Engine.createSession(Engine.java:31)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:336)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:169)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:148)
	at org.h2.Driver.connect(Driver.java:69)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:353)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:562)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:900)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:931)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1862)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1799)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.runtimeterror.milkyways.MilkywaysApplication.main(MilkywaysApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: The file is locked: nio:/home/puneet/Code/IdeaProjects/milkyways/data/testdb.mv.db [1.4.199/7]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 68 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:/home/puneet/Code/IdeaProjects/milkyways/data/testdb.mv.db [1.4.199/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:390)
	... 62 more
2019-11-25 15:34:30 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "STORE[*] SELECT * FROM STORE"; expected "SET, SAVEPOINT, SCRIPT, SHUTDOWN, SHOW"; SQL statement:
STORE SELECT * FROM STORE [42001-199]
2019-11-25 15:41:36 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "INSERT INTO STORE VALUES (8, '(778) 979-4889', [*]'Milkyway Inc.);"; SQL statement:
INSERT INTO STORE VALUES (8, '(778) 979-4889', 'Milkyway Inc.); [42000-199]
2019-11-25 15:46:59 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into item (itemid, name, description, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating, store_storeid)
values (1, 'Birthday letter donuts', 'For your loved ones, an untraditional alternative to cake. 13 letter donuts spelling out H.A.P.P.Y B.I.R.T.H.D.A.Y. Available in flavors of your choice including chocolate, vanilla bean, birthday cake and maple., 'birthday-donuts.jpg[*]', 9, true, false, false , false, false , 90.00, 5);"; SQL statement:
insert into item (itemid, name, description, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating, store_storeid)
values (1, 'Birthday letter donuts', 'For your loved ones, an untraditional alternative to cake. 13 letter donuts spelling out H.A.P.P.Y B.I.R.T.H.D.A.Y. Available in flavors of your choice including chocolate, vanilla bean, birthday cake and maple., 'birthday-donuts.jpg', 9, true, false, false , false, false , 90.00, 5); [42000-199]
2019-11-25 15:47:23 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into item (itemid, name, description, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating, store_storeid)
values (1, 'Birthday letter donuts', 'For your loved ones, an untraditional alternative to cake. 13 letter donuts spelling out H.A.P.P.Y B.I.R.T.H.D.A.Y. Available in flavors of your choice including chocolate, vanilla bean, birthday cake and maple., 'birthday-donuts.jpg[*]', 9, true, false, false , false, false , 90.00, 5, 2);"; SQL statement:
insert into item (itemid, name, description, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating, store_storeid)
values (1, 'Birthday letter donuts', 'For your loved ones, an untraditional alternative to cake. 13 letter donuts spelling out H.A.P.P.Y B.I.R.T.H.D.A.Y. Available in flavors of your choice including chocolate, vanilla bean, birthday cake and maple., 'birthday-donuts.jpg', 9, true, false, false , false, false , 90.00, 5, 2); [42000-199]
2019-11-25 15:47:31 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into item (itemid, name, description, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating, store_storeid)
values (1, 'Birthday letter donuts', 'For your loved ones, an untraditional alternative to cake. 13 letter donuts spelling out H.A.P.P.Y B.I.R.T.H.D.A.Y. Available in flavors of your choice including chocolate, vanilla bean, birthday cake and maple., 'birthday-donuts.jpg[*]', 9, true, false, false , false, false , 90.00, 5, 2)"; SQL statement:
insert into item (itemid, name, description, imageurl, quantity, type, sugarfree, glutenfree, dairyfree, vegetarian, price, rating, store_storeid)
values (1, 'Birthday letter donuts', 'For your loved ones, an untraditional alternative to cake. 13 letter donuts spelling out H.A.P.P.Y B.I.R.T.H.D.A.Y. Available in flavors of your choice including chocolate, vanilla bean, birthday cake and maple., 'birthday-donuts.jpg', 9, true, false, false , false, false , 90.00, 5, 2) [42000-199]
2019-11-26 10:39:21 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'NULL' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:39:21 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'NULL' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:46:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:46:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:48:43 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:48:43 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:49:39 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'NULL' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:49:39 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'NULL' (ITEM: ""DAIRYFREE"" BOOLEAN NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:54:02 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ITEM: ""DAIRYFREE"" BOOLEAN)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:54:02 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (ITEM: ""DAIRYFREE"" BOOLEAN)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:55:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'NULL' (ITEM: ""DAIRYFREE"" BOOLEAN)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
2019-11-26 10:55:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'NULL' (ITEM: ""DAIRYFREE"" BOOLEAN)"; SQL statement:
INSERT INTO "PUBLIC"."ITEM"("ITEMID","DAIRYFREE","DESCRIPTION","GLUTENFREE","IMAGEURL","NAME","PRICE","QUANTITY","RATING","SUGARFREE","TYPE","VEGETARIAN","STORE_STOREID")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-199]
